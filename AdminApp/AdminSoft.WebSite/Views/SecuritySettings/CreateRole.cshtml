@model PLNFramework.Security.ViewModels.NewAppRoleViewModel

@{
    ViewBag.Title = "CreateRole";
}

<h3>
    <a href="@Url.Content("~/SecuritySettings/")">Admin</a>/<a href="@Url.Content("~/SecuritySettings/Roles")">Roles</a>/New role
</h3>
<hr />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 text-right">
                <b>Permisos</b>
            </div>
            <div class="col-md-10">
                @{

                    var resources = Model.AvailablePermissions.Select(x => x.ResourceName).Distinct();
                    foreach (var res in resources)
                    {
                        <div class="col-md-2">
                    <div class="panel panel-primary ">
                        <div class="panel-heading">
                             @res 
                        </div>
                        <div class="panel-body">
                            <div class="container">
                                <div class="checkbox">
                                    @{ var chkData = res.Replace(' ', '_');}
                                    <input class="chkAll" chk-data="@chkData" type="checkbox" /> <b>Todos</b>
                                </div>
                                    @foreach (var perm in Model.AvailablePermissions)
                                    {
                                        var selected = "";
                                        if (Model.SelectedPermissions != null)
                                        {
                                            if (Model.SelectedPermissions.Contains(perm.Id))
                                            {
                                                selected = "checked";
                                            }
                                        }
                                        if (perm.ResourceName != res) { continue; }
                                        <div class="checkbox" >
                                            <input name="SelectedPermissions" class="@chkData" type="checkbox" value="@perm.Id" @selected />
                                            @perm.ActionName
                                        </div>
                                    }
                                </div>
                        </div>
                    </div>
                </div>
                    }
                }

               
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript" >

        $(function () {

            $(".chkAll").on("click", function (e) {
                var data = $(this).attr("chk-data");
                var clase = "." + data;
                $(clase).prop('checked', $(this).prop('checked'));
            });

        })

    </script>
}
